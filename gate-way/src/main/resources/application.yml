server:
  port: 8001
spring:
  thymeleaf:
    #模板的模式，支持 HTML, XML TEXT JAVASCRIPT
    mode: HTML
    #编码 可不用配置
    encoding: UTF-8
    #内容类别,可不用配置
    content-type: text/html
    #开发配置为false,避免修改模板还要重启服务器
    cache: false
    #配置模板路径，默认是templates，可以不用配置
    prefix: classpath:/templates/
    suffix: .html
  application:
    name: gate-way-service
  cloud:
    nacos:
      discovery:
        server-addr: www.mynacos.com:8848
        ip: www.mylocalhost.com
      config:
        #取消配置中心
        enabled: false
    gateway:
      discovery:
        locator:
          enabled: true
#        routes: #默认会根据服务名称进行路由
#          - id: id-user-service-provider    #随意，方便记忆并且在所有路由定义中唯一即可
#            uri: lb://user-service-provider   # lb://为固定写法，表示开启负载均衡
#            predicates:
#              - Path=/user-service-provider/**
#          - id: id-user-service-consumer
#            uri: lb://user-service-consumer
#            predicates:
#              - Path=/user-service-consumer/**
#            filters:
#              - StripPrefix=1
#dubbo:
#  cloud:
#    #订阅的服务 默认订阅所有服务
#    subscribed-services:
#  protocol:
#    port: 20881
#    name: dubbo
#  registry:
#      #将dubbo服务挂在到Springcloud，本案例中就是读取nacos中的服务
#      address: spring-cloud://localhost
##      group: gate-way
#  application:
#    name: gate-way-service
##    qos-enable: false
#  consumer:
#    #订阅的客户端不检查，dubbo在服务启动后，回去检查调用的Reference接口，检查失败，会导致启动不成功
#    check: false

github:
  client_id: c9d8fccc9202c219481c
  client_secret: 16d80255d78b409a22470d47ab7fa6e7c1079d70
  redirect_url: http://localhost:8001/api/github/callback
  login_url: https://github.com/login/oauth/authorize?client_id=c9d8fccc9202c219481c&state=test&redirect_uri=http://localhost:8001/api/github/callback
security:
  oauth2:
    client:
      client-id: client1
      client-secret: admin
      access-token-uri: http://localhost:8004/oauth/token
      user-authorization-uri: http://localhost:8004/oauth/authorize
      scope: web
    authorization:
      check-token-access: http://localhost:8004/oauth/check_token
